use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with webpack to recompile .js and .css sources.

# phoenix configuration for iot endpoints
config :acqdat_iot, AcqdatIotWeb.Endpoint,
  http: [port: 4001],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

# phoenix configuration acqdat api
config :acqdat_api, AcqdatApiWeb.Endpoint,
  http: [port: 4000],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

config :acqdat_core, AcqdatCore.Mailer, adapter: Bamboo.LocalAdapter

config :tirexs, :uri, "http://127.0.0.1:9200"

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Configure your database
config :acqdat_core, AcqdatCore.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: "postgres",
  password: "postgres",
  database: "acqdat_core_dev",
  hostname: "localhost",
  pool_size: 10

config :acqdat_core, :mqtt_broker,
  host: System.get_env("MQTT_HOST", "localhost"),
  port: System.get_env("MQTT_PORT", "1883")

# Configure Kafka_ex

#kafka_ex configuration
config :kafka_ex,
  brokers: [
    {"localhost", 9093},
    {"localhost", 9094},
    {"localhost", 9095}
  ],
  consumer_group: "kafka_ex",
  client_id: "kafka_ex",
  disable_default_worker: true,
  sync_timeout: 3000,
  max_restarts: 10,
  max_seconds: 60,
  commit_interval: 5_000,
  commit_threshold: 100,
  sleep_for_reconnect: 400,
  use_ssl: false,
  kafka_version: "2.6.0"
